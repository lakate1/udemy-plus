{"version":3,"file":"index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;ACNmD;AACiC;AAChD;AAC2B;AAC/B;AACb;AAEnBA,oEAAiB,CAACO,6CAAU,EAAE;EAC1BE,IAAIA,CAAC;IAAEC,UAAU;IAAEC;EAAc,CAAC,EAAE;IAChC,MAAM;MAAEC,OAAO;MAAEC;IAAgB,CAAC,GAAGH,UAAU;IAC/C,MAAMI,UAAU,GAAGZ,sEAAa,CAAC,CAAC;IAElC,OACIa,oDAAA,CAAAC,2CAAA,QACID,oDAAA,CAACZ,sEAAiB,QACdY,oDAAA,CAACV,4DAAS;MAACY,KAAK,EAAEb,mDAAE,CAAC,QAAQ,EAAE,YAAY;IAAE,GACzCW,oDAAA,CAACT,+DAAY;MACTY,MAAM,EAAE,CACJ;QAAEV,IAAI,EAAE,KAAK;QAAEW,KAAK,EAAE;MAAU,CAAC,EACjC;QAAEX,IAAI,EAAE,QAAQ;QAAEW,KAAK,EAAE;MAAU,CAAC,CACtC;MACFC,KAAK,EAAEP,eAAgB;MACvBQ,QAAQ,EAAEC,MAAM,IAAIX,aAAa,CAAC;QAAEE,eAAe,EAAES;MAAO,CAAC;IAAE,CAClE,CACM,CACI,CAAC,EACpBP,oDAAA;MAAA,GAASD;IAAU,GACfC,oDAAA,CAACd,6DAAQ;MACTsB,SAAS,EAAC,cAAc;MACxBC,OAAO,EAAC,IAAI;MACZC,WAAW,EAAErB,mDAAE,CAAC,eAAe,EAAE,YAAY,CAAE;MAC/CgB,KAAK,EAAER,OAAQ;MACfS,QAAQ,EAAEC,MAAM,IAAIX,aAAa,CAAC;QAAEC,OAAO,EAAEU;MAAM,CAAC,CAAE;MACtDI,cAAc,EAAE,CACZ,WAAW,EACX,aAAa;IACf,CACD,CACA,CACP,CAAC;EAEX,CAAC;EACDC,IAAIA,CAAC;IAAEjB;EAAW,CAAC,EAAE;IACjB,MAAM;MAAEE;IAAQ,CAAC,GAAGF,UAAU;IAC9B,MAAMI,UAAU,GAAGZ,kEAAa,CAACyB,IAAI,CAAC;MAClCJ,SAAS,EAAC;IACd,CAAC,CAAC;IAEF,OACIR,oDAAA,CAACd,6DAAQ,CAAC2B,OAAO;MAAA,GACbd,UAAU;MACdU,OAAO,EAAC,IAAI;MACZJ,KAAK,EAAGR;IAAS,CAChB,CAAC;EAEV;AACJ,CAAC,CAAC,C","sources":["webpack://udemy-plus/./src/main.css","webpack://udemy-plus/external window \"React\"","webpack://udemy-plus/external window [\"wp\",\"blockEditor\"]","webpack://udemy-plus/external window [\"wp\",\"blocks\"]","webpack://udemy-plus/external window [\"wp\",\"components\"]","webpack://udemy-plus/external window [\"wp\",\"i18n\"]","webpack://udemy-plus/webpack/bootstrap","webpack://udemy-plus/webpack/runtime/compat get default export","webpack://udemy-plus/webpack/runtime/define property getters","webpack://udemy-plus/webpack/runtime/hasOwnProperty shorthand","webpack://udemy-plus/webpack/runtime/make namespace object","webpack://udemy-plus/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {registerBlockType} from \"@wordpress/blocks\"\nimport { RichText, useBlockProps, InspectorControls } from \"@wordpress/block-editor\"\nimport { __ } from \"@wordpress/i18n\"\nimport { PanelBody, ColorPalette } from \"@wordpress/components\"\nimport block from \"./block.json\"\nimport \"./main.css\"\n\nregisterBlockType(block.name, {\n    edit({ attributes, setAttributes }) {\n        const { content, underline_color } = attributes\n        const blockProps = useBlockProps()\n        \n        return (\n            <>\n                <InspectorControls>\n                    <PanelBody title={__(\"Colors\", \"udemy-plus\")}>\n                        <ColorPalette\n                            colors={[\n                                { name: \"Red\", color: \"#f87171\" },\n                                { name: \"Indigo\", color: \"#818cf8\" }\n                            ]}\n                            value={underline_color}\n                            onChange={newVal => setAttributes({ underline_color: newVal })}\n                        />\n                    </PanelBody>\n                </InspectorControls>\n                <div {...blockProps}>\n                    <RichText\n                    className=\"fancy-header\"\n                    tagName=\"h2\" \n                    placeholder={__(\"Enter Heading\", \"udemy-plus\")}\n                    value={content}\n                    onChange={newVal => setAttributes({ content: newVal})}\n                    allowedFormats={[\n                        \"core/bold\",\n                        \"core/italic\"\n                    ]}\n                    />\n                </div>\n            </>\n        )\n    },\n    save({ attributes }) {\n        const { content } = attributes\n        const blockProps = useBlockProps.save({\n            className:\"fancy-header\"\n        })\n\n        return (\n            <RichText.Content\n            {...blockProps}\n            tagName=\"h2\"\n            value={ content }\n            />\n        )\n    }\n})"],"names":["registerBlockType","RichText","useBlockProps","InspectorControls","__","PanelBody","ColorPalette","block","name","edit","attributes","setAttributes","content","underline_color","blockProps","createElement","Fragment","title","colors","color","value","onChange","newVal","className","tagName","placeholder","allowedFormats","save","Content"],"sourceRoot":""}